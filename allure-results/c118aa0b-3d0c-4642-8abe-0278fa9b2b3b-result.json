{"name": "Query returns correct golden answer -- @1.1 ", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'json'\n", "trace": "  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\model.py\", line 1991, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\matchers.py\", line 105, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"features\\steps\\golden_steps.py\", line 7, in step_impl\n    answer = context.response.json()[\"text\"].strip()\n             ^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given the API is available", "status": "passed", "start": 1755085802826, "stop": 1755085802828}, {"name": "When I ask \"What is 2+2?\"", "status": "passed", "start": 1755085802828, "stop": 1755085802831}, {"name": "Then the response should match \"4\"", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'json'\n", "trace": "  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\model.py\", line 1991, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\matchers.py\", line 105, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"features\\steps\\golden_steps.py\", line 7, in step_impl\n    answer = context.response.json()[\"text\"].strip()\n             ^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1755085802831, "stop": 1755085802833}], "parameters": [{"name": "query", "value": "What is 2+2?"}, {"name": "expected", "value": "4"}], "start": 1755085802825, "stop": 1755085802833, "uuid": "0e02b273-c551-493c-8211-8abe87a4d81e", "historyId": "b845e2a4b64bab6fa641e8b341253496", "fullName": "Golden Answer Validation: Query returns correct golden answer", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Golden Answer Validation"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}], "titlePath": ["features", "Golden Answer Validation"]}