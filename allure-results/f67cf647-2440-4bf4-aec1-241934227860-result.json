{"name": "Query returns correct golden answer -- @1.2 ", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'json'\n", "trace": "  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\model.py\", line 1991, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\matchers.py\", line 105, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"features\\steps\\golden_steps.py\", line 7, in step_impl\n    answer = context.response.json()[\"text\"].strip()\n             ^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given the API is available", "status": "passed", "start": 1755085802835, "stop": 1755085802837}, {"name": "When I ask \"capital of France\"", "status": "passed", "start": 1755085802837, "stop": 1755085802839}, {"name": "Then the response should match \"Paris\"", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'json'\n", "trace": "  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\model.py\", line 1991, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\asusv\\OneDrive\\Desktop\\ai-agent-test-framework\\.venv\\Lib\\site-packages\\behave\\matchers.py\", line 105, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"features\\steps\\golden_steps.py\", line 7, in step_impl\n    answer = context.response.json()[\"text\"].strip()\n             ^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1755085802840, "stop": 1755085802840}], "parameters": [{"name": "query", "value": "capital of France"}, {"name": "expected", "value": "Paris"}], "start": 1755085802834, "stop": 1755085802841, "uuid": "a64de687-9432-424b-8d94-6b22b4605f60", "historyId": "8cd9bb5ad2a91d9c5643a6f826d1fa0f", "fullName": "Golden Answer Validation: Query returns correct golden answer", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Golden Answer Validation"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}], "titlePath": ["features", "Golden Answer Validation"]}